{% extends 'base.html.twig' %}

{% block title %}Modifier une fiche de paie{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1>Modifier une fiche de paie</h1>
        
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}
        
        <div class="card">
            <div class="card-body">
                <form method="post" action="{{ path('admin_fiche_de_paie_update', {'id': ficheDePaie.id}) }}" id="edit-form">
                    <div class="mb-3">
                        <label for="coach" class="form-label">Coach</label>
                        <select name="coach" id="coach" class="form-select" required>
                            <option value="">Sélectionner un coach</option>
                            {% for coach in coaches %}
                                <option value="{{ coach.id }}" {% if coach.id == ficheDePaie.coach.id %}selected{% endif %}>{{ coach.nom }} {{ coach.prenom }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="month" class="form-label">Mois</label>
                                <select name="month" id="month" class="form-select" required>
                                    {% set currentMonth = ficheDePaie.periode|date('m') %}
                                    <option value="01" {% if currentMonth == '01' %}selected{% endif %}>Janvier</option>
                                    <option value="02" {% if currentMonth == '02' %}selected{% endif %}>Février</option>
                                    <option value="03" {% if currentMonth == '03' %}selected{% endif %}>Mars</option>
                                    <option value="04" {% if currentMonth == '04' %}selected{% endif %}>Avril</option>
                                    <option value="05" {% if currentMonth == '05' %}selected{% endif %}>Mai</option>
                                    <option value="06" {% if currentMonth == '06' %}selected{% endif %}>Juin</option>
                                    <option value="07" {% if currentMonth == '07' %}selected{% endif %}>Juillet</option>
                                    <option value="08" {% if currentMonth == '08' %}selected{% endif %}>Août</option>
                                    <option value="09" {% if currentMonth == '09' %}selected{% endif %}>Septembre</option>
                                    <option value="10" {% if currentMonth == '10' %}selected{% endif %}>Octobre</option>
                                    <option value="11" {% if currentMonth == '11' %}selected{% endif %}>Novembre</option>
                                    <option value="12" {% if currentMonth == '12' %}selected{% endif %}>Décembre</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="year" class="form-label">Année</label>
                                <select name="year" id="year" class="form-select" required>
                                    {% set currentYear = ficheDePaie.periode|date('Y') %}
                                    {% set now = "now"|date("Y") %}
                                    {% for year in range(now - 2, now + 1) %}
                                        <option value="{{ year }}" {% if year == currentYear %}selected{% endif %}>{{ year }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="alert alert-info">
                        <i class="fa fa-info-circle"></i> 
                        La fiche de paie sera recalculée automatiquement en fonction des séances validées (statut "terminee") 
                        pour le mois sélectionné.
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="card bg-light">
                                <div class="card-body">
                                    <h5 class="card-title">Informations actuelles</h5>
                                    <p class="mb-1"><strong>Coach :</strong> {{ ficheDePaie.coach.nom }} {{ ficheDePaie.coach.prenom }}</p>
                                    <p class="mb-1"><strong>Période :</strong> {{ ficheDePaie.periode|date('m/Y') }}</p>
                                    <p class="mb-1"><strong>Heures :</strong> {{ ficheDePaie.totalHeures }}</p>
                                    <p class="mb-0"><strong>Montant :</strong> {{ ficheDePaie.montantTotal }} €</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card bg-primary text-white">
                                <div class="card-body">
                                    <h5 class="card-title">Nouvelles informations</h5>
                                    <p class="mb-1"><strong>Coach :</strong> <span id="preview-coach">{{ ficheDePaie.coach.nom }} {{ ficheDePaie.coach.prenom }}</span></p>
                                    <p class="mb-1"><strong>Période :</strong> <span id="preview-periode">{{ ficheDePaie.periode|date('m/Y') }}</span></p>
                                    <p class="mb-1"><strong>Heures :</strong> <span id="preview-heures">{{ ficheDePaie.totalHeures }}</span></p>
                                    <p class="mb-0"><strong>Montant :</strong> <span id="preview-montant">{{ ficheDePaie.montantTotal }}</span> €</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-save"></i> Mettre à jour la fiche de paie
                        </button>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="mt-3">
            <a href="{{ path('admin', {crudAction: 'index', crudControllerFqcn: 'App\\Controller\\Admin\\FicheDePaieCrudController'}) }}" class="btn btn-secondary">
                <i class="fa fa-arrow-left"></i> Retour à la liste
            </a>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const coachSelect = document.getElementById('coach');
            const monthSelect = document.getElementById('month');
            const yearSelect = document.getElementById('year');
            
            const previewCoach = document.getElementById('preview-coach');
            const previewPeriode = document.getElementById('preview-periode');
            const previewHeures = document.getElementById('preview-heures');
            const previewMontant = document.getElementById('preview-montant');
            
            // Fonction pour mettre à jour les données prévisionnelles
            function updatePreview() {
                const coachId = coachSelect.value;
                const month = monthSelect.value;
                const year = yearSelect.value;
                
                if (!coachId || !month || !year) {
                    return;
                }
                
                // Afficher un indicateur de chargement
                previewHeures.innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
                previewMontant.innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
                
                // URL de l'API avec les paramètres
                const apiUrl = `{{ path('admin_fiche_de_paie_preview') }}?coach=${coachId}&month=${month}&year=${year}`;
                console.log('Appel API:', apiUrl);
                
                // Faire une requête AJAX pour récupérer les données prévisionnelles
                fetch(apiUrl)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Erreur HTTP: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Données reçues:', data);
                        
                        if (data.error) {
                            console.error('Erreur API:', data.error);
                            previewHeures.textContent = 'Erreur';
                            previewMontant.textContent = 'Erreur';
                            return;
                        }
                        
                        // Mettre à jour les données prévisionnelles
                        previewCoach.textContent = `${data.coach.nom} ${data.coach.prenom}`;
                        previewPeriode.textContent = data.periode;
                        
                        // Récupérer les valeurs actuelles pour la comparaison
                        const currentHeures = {{ ficheDePaie.totalHeures }};
                        const currentMontant = {{ ficheDePaie.montantTotal|number_format(2, '.', '') }};
                        
                        // Récupérer les nouvelles valeurs
                        const newHeures = parseInt(data.totalHeures);
                        const newMontant = parseFloat(data.montantTotal);
                        
                        // Afficher les heures avec badge si différent
                        if (newHeures > currentHeures) {
                            previewHeures.innerHTML = `${newHeures} <span class="badge bg-success">+${newHeures - currentHeures}</span>`;
                        } else if (newHeures < currentHeures) {
                            previewHeures.innerHTML = `${newHeures} <span class="badge bg-danger">${newHeures - currentHeures}</span>`;
                        } else {
                            previewHeures.textContent = newHeures;
                        }
                        
                        // Afficher le montant avec badge si différent
                        if (newMontant > currentMontant) {
                            previewMontant.innerHTML = `${newMontant} <span class="badge bg-success">+${(newMontant - currentMontant).toFixed(2)}</span>`;
                        } else if (newMontant < currentMontant) {
                            previewMontant.innerHTML = `${newMontant} <span class="badge bg-danger">${(newMontant - currentMontant).toFixed(2)}</span>`;
                        } else {
                            previewMontant.textContent = newMontant;
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération des données prévisionnelles:', error);
                        previewHeures.textContent = 'Erreur';
                        previewMontant.textContent = 'Erreur';
                    });
            }
            
            // Ajouter des écouteurs d'événements pour les changements de sélection
            coachSelect.addEventListener('change', updatePreview);
            monthSelect.addEventListener('change', updatePreview);
            yearSelect.addEventListener('change', updatePreview);
            
            // Mettre à jour les données prévisionnelles au chargement de la page
            updatePreview();
        });
    </script>
{% endblock %} 